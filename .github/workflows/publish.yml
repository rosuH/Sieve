name: Publish Release to Play Store

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - id: fetchLatestRelease
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          repository: ${{ github.repository }}
          excludes: prerelease, draft
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Print Latest Release
        run: echo ${{ steps.fetchLatestRelease.outputs.release }}
      - name: Prepare Release Artifact
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          file: 'app-release.aab'
      - name: Prepare Release mapping
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          file: 'mapping.txt'
      - name: Fetch signed APK
        run: |
          LATEST_RELEASE=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest)
          APK_URL=$(echo "$LATEST_RELEASE" | sed -n 's/.*"browser_download_url": "\([^"]*-signed\.apk\)".*/\1/p')
          if [ -n "$APK_URL" ]; then
              APK_FILENAME=$(basename "$APK_URL")
              curl -L -o "$APK_FILENAME" "$APK_URL"
              echo "Downloaded signed APK: $APK_FILENAME"
              APK_NAME=$(ls *-signed.apk)
              echo "APK_NAME=$APK_NAME" >> $GITHUB_ENV
              echo "Found APK: $APK_NAME"
          else
              echo "No signed APK found in the latest release"
              exit 1
          fi
      - name: List files
        run: ls -l
      - name: Send commit to telegram
        if: success()
        env:
          CHANNEL_ID: ${{ secrets.TELEGRAM_TO }}
          BOT_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          COMMIT_MESSAGE: |+
            新版本已发布 🎉
            ```
            ${{ github.event.head_commit.message }}
            ```by `${{ github.event.head_commit.author.name }}`
            更多提交细节：(${{ github.event.head_commit.url }})
        run: |
          ESCAPED=$(echo "$COMMIT_MESSAGE" | sed 's/[_*[\]()~`>#+\-=|{}.!]/\\&/g')
          curl -v "https://api.telegram.org/bot${BOT_TOKEN}/sendMediaGroup" \
            -F chat_id="${CHANNEL_ID}" \
            -F "media=[{\"type\":\"document\", \"media\":\"attach://apkFile\", \"parse_mode\":\"MarkdownV2\", \"caption\":\"${ESCAPED}\"}]" \
            -F "apkFile=@${APK_NAME}"
      
      # - name: Upload Android Release to Play Store
      #   uses: r0adkll/upload-google-play@v1.1.3
      #   with:
      #     serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
      #     packageName: "example.com"
      #     releaseFiles: 'app-release.aab'
      #     track: production
      #     mappingFile: 'mapping.txt'
